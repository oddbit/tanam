name: Deploy to Firebase Hosting on merge
on:
  push:
    branches:
      - main
env:
  HOSTING_ENV: ${{ github.ref == 'refs/heads/main' && vars.HOSTING_ENV_PROD || vars.HOSTING_ENV_DEV  }}
jobs:
  code_check:
    name: Code check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: |
            hosting/package-lock.json

      - name: Apply formatting and linting
        run: npm ci && npm run lint:fix && npm run format
        working-directory: ./hosting

      - name: Ensure code is unchanged
        run: git diff --exit-code

  build_and_deploy:
    name: Build and deploy
    needs: code_check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: |
            hosting/package-lock.json

      - name: Determine hosting environment
        id: set-env
        run: echo "HOSTING_ENV=${{ github.ref == 'refs/heads/main' && 'PROD' || 'DEV' }}" >> $GITHUB_ENV

      - name: Set hosting environment
        run: echo $HOSTING_ENV > hosting/.env && cat hosting/.env

      - name: Cache hosting build
        uses: actions/cache@v4
        id: cache-hosting
        with:
          key: ${CI_COMMIT_REF_SLUG}
          path: |
            ./hosting/node_modules/
            ./hosting/.next/cache/

      - name: Build application
        run: npm ci && npm run build
        working-directory: ./hosting

      - uses: FirebaseExtended/action-hosting-deploy@v0
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_TANAM_TESTING }}
          projectId: tanam-testing
          channelId: live
