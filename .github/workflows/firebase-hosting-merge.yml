name: Deploy to Firebase Hosting on merge
on:
  push:
    branches:
      - main
jobs:
  code_check:
    name: Code check
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: |
            hosting/package-lock.json

      - name: Apply formatting and linting
        run: npm ci && npm run lint:fix && npm run format
        working-directory: ./hosting

      - name: Ensure code is unchanged
        run: git diff --exit-code

  build_and_deploy:
    name: Build and deploy
    needs: code_check
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: |
            hosting/package-lock.json

      - name: Cache build
        uses: actions/cache@v4
        with:
          path: |
            hosting/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Build application
        run: npm ci && npm run build
        working-directory: ./hosting

      - uses: FirebaseExtended/action-hosting-deploy@v0
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_TANAM_TESTING }}
          projectId: tanam-testing
          channelId: live
