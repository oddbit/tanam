name: Configure App Hosting

on:
  push:
    branches:
      - main

permissions:
  actions: read
  contents: read

jobs:
  firebase_secrets_update:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        config:
          - variable: "NEXT_PUBLIC_FIREBASE_API_KEY"
            secret: "firebaseApiKey"
          - variable: "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN"
            secret: "firebaseAuthDomain"
          - variable: "NEXT_PUBLIC_FIREBASE_DATABASE_URL"
            secret: "firebaseDatabaseUrl"
          - variable: "NEXT_PUBLIC_FIREBASE_PROJECT_ID"
            secret: "firebaseProjectId"
          - variable: "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET"
            secret: "firebaseStorageBucket"
          - variable: "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID"
            secret: "firebaseMessagingSenderId"
          - variable: "NEXT_PUBLIC_FIREBASE_APP_ID"
            secret: "firebaseAppId"

    steps:
      # Step 1: Check out the repository code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Set up Node.js environment
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      # Step 3: Install dependencies
      - run: npm ci --legacy-peer-deps

      # Step 4: Install Firebase CLI
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # Step 5: Load environment variable value from apps/cms/.env
      - name: Load environment variable value
        id: load_env
        run: |
          value=$(grep -m 1 "${{ matrix.config.variable }}" apps/cms/.env | cut -d '=' -f 2)
          if [ -z "$value" ]; then
            echo "Environment variable ${{ matrix.config.variable }} is missing in the .env file!"
            exit 1
          fi
          echo "CONF_VALUE=$value" >> $GITHUB_ENV

      # Step 6: Check if the secret has changed in the cloud
      - name: Check if cloud secret value has changed
        id: check_secret
        run: |
          # Try to get the current value of the secret from Firebase
          cloud_value=$(firebase apphosting:secrets:access ${{ matrix.config.secret }} 2>/dev/null || echo "")

          if [ "$cloud_value" = "${{ env.CONF_VALUE }}" ]; then
            echo "The value for ${{ matrix.config.secret }} has not changed."
            echo "skip_update=true" >> $GITHUB_ENV
          else
            echo "The value for ${{ matrix.config.secret }} has changed or the secret does not exist."
            echo "skip_update=false" >> $GITHUB_ENV
        continue-on-error: true

      # Step 7: Stop job if secret value hasn't changed (skip steps)
      - name: Stop if value has not changed
        if: env.skip_update == 'true'
        run: |
          echo "Skipping the secret update since the value has not changed."
          exit 0

      # Step 8: Set the new secret value in Firebase
      - name: Set cloud secret
        if: env.skip_update == 'false'
        run: |
          echo "${{ env.value }}" | firebase apphosting:secrets:set --force --data-file - ${{ matrix.config.secret }}

      # Step 9: Grant access to the new secret
      - name: Grant access to the secret
        if: env.skip_update == 'false'
        run: firebase apphosting:secrets:grantAccess ${{ matrix.config.secret }}
